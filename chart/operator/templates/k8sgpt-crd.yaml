---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: k8sgpts.core.k8sgpt.ai
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  group: core.k8sgpt.ai
  names:
    kind: K8sGPT
    listKind: K8sGPTList
    plural: k8sgpts
    singular: k8sgpt
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: K8sGPT is the Schema for the k8sgpts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: K8sGPTSpec defines the desired state of K8sGPT
              properties:
                ai:
                  properties:
                    anonymized:
                      default: true
                      type: boolean
                    backOff:
                      properties:
                        enabled:
                          default: false
                          type: boolean
                        maxRetries:
                          default: 5
                          type: integer
                      required:
                        - enabled
                        - maxRetries
                      type: object
                    backend:
                      default: openai
                      enum:
                        - ibmwatsonxai
                        - openai
                        - localai
                        - azureopenai
                        - amazonbedrock
                        - cohere
                        - amazonsagemaker
                        - google
                        - googlevertexai
                      type: string
                    baseUrl:
                      type: string
                    enabled:
                      type: boolean
                    engine:
                      type: string
                    language:
                      default: english
                      type: string
                    maxTokens:
                      default: "2048"
                      type: string
                    model:
                      default: gpt-3.5-turbo
                      type: string
                    providerId:
                      type: string
                    proxyEndpoint:
                      type: string
                    region:
                      type: string
                    secret:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                    topk:
                      default: "50"
                      type: string
                  required:
                    - backend
                  type: object
                customAnalyzers:
                  items:
                    properties:
                      connection:
                        properties:
                          port:
                            type: integer
                          url:
                            type: string
                        type: object
                      name:
                        type: string
                    type: object
                  type: array
                extraOptions:
                  properties:
                    backstage:
                      properties:
                        enabled:
                          type: boolean
                      type: object
                  type: object
                filters:
                  items:
                    type: string
                  type: array
                imagePullSecrets:
                  items:
                    properties:
                      name:
                        type: string
                    type: object
                  type: array
                integrations:
                  properties:
                    trivy:
                      properties:
                        enabled:
                          type: boolean
                        namespace:
                          type: string
                        skipInstall:
                          type: boolean
                      type: object
                  type: object
                kubeconfig:
                  description: |-
                    Define the kubeconfig the Deployment must use.
                    If empty, the Deployment will use the ServiceAccount provided by Kubernetes itself.
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  type: object
                noCache:
                  type: boolean
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                remoteCache:
                  properties:
                    azure:
                      properties:
                        containerName:
                          type: string
                        storageAccount:
                          type: string
                      type: object
                    credentials:
                      properties:
                        name:
                          type: string
                      type: object
                    gcs:
                      properties:
                        bucketName:
                          type: string
                        projectId:
                          type: string
                        region:
                          type: string
                      type: object
                    interplex:
                      properties:
                        endpoint:
                          type: string
                      type: object
                    s3:
                      properties:
                        bucketName:
                          type: string
                        region:
                          type: string
                      type: object
                  type: object
                repository:
                  default: ghcr.io/k8sgpt-ai/k8sgpt
                  type: string
                sink:
                  properties:
                    channel:
                      type: string
                    icon_url:
                      type: string
                    secret:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                    type:
                      enum:
                        - slack
                        - mattermost
                      type: string
                    username:
                      type: string
                    webhook:
                      type: string
                  type: object
                targetNamespace:
                  type: string
                version:
                  type: string
              type: object
            status:
              description: |-
                K8sGPTStatus defines the observed state of K8sGPT
                show the current backend used
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
  {{- include "chart.labels" . | nindent 4 }}
  name: mutations.core.k8sgpt.ai
spec:
  group: core.k8sgpt.ai
  names:
    kind: Mutation
    listKind: MutationList
    plural: mutations
    singular: mutation
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Updates of the autoremediation phase
          jsonPath: .status.message
          name: State
          type: string
        - description: The similarity score of the autoremediation
          jsonPath: .spec.similarityScore
          name: Similarity Score
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            Display in wide format the autoremediationphase status and similarity score
            Mutation is the Schema for the mutations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: MutationSpec defines the desired state of Mutation.
              properties:
                originConfiguration:
                  type: string
                resource:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                resourceGVK:
                  type: string
                result:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                similarityScore:
                  description: |-
                    INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  type: string
                targetConfiguration:
                  type: string
              type: object
            status:
              description: MutationStatus defines the observed state of Mutation.
              properties:
                message:
                  type: string
                phase:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
