---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: mutations.core.k8sgpt.ai
spec:
  group: core.k8sgpt.ai
  names:
    kind: Mutation
    listKind: MutationList
    plural: mutations
    singular: mutation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The phase of the autoremediation
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Display in wide format the autoremediationphase status
          Mutation is the Schema for the mutations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MutationSpec defines the desired state of Mutation.
            properties:
              originConfiguration:
                type: string
              resource:
                description: |-
                  INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              result:
                description: Result is the Schema for the results API
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ResultSpec defines the desired state of Result
                    properties:
                      autoRemediationStatus:
                        properties:
                          phase:
                            description: Enum for Phase
                            type: integer
                        type: object
                      backend:
                        type: string
                      details:
                        type: string
                      error:
                        items:
                          properties:
                            sensitive:
                              items:
                                properties:
                                  masked:
                                    type: string
                                  unmasked:
                                    type: string
                                type: object
                              type: array
                            text:
                              type: string
                          type: object
                        type: array
                      kind:
                        type: string
                      name:
                        type: string
                      parentObject:
                        type: string
                    required:
                    - autoRemediationStatus
                    - backend
                    - details
                    - error
                    - kind
                    - name
                    - parentObject
                    type: object
                  status:
                    description: ResultStatus defines the observed state of Result
                    properties:
                      lifecycle:
                        type: string
                      webhook:
                        type: string
                    type: object
                type: object
              targetConfiguration:
                type: string
            type: object
          status:
            description: MutationStatus defines the observed state of Mutation.
            properties:
              phase:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
